Dataset_emp<-na.omit(Dataset_emp)
Dataset_emp <- read_excel("C:/Users/Aishwarya/Documents/Dataset 800.xlsx")
Dataset_emp$experience<-as.numeric(factor(Dataset_emp$experience, levels=c('Young', 'Intermediate','Senior')))
Dataset_emp$net_score<-as.numeric(factor(Dataset_emp$net_score, levels=c('Good', 'Very good','Excellent')))
Dataset_emp$projects_completed<-as.numeric(factor(Dataset_emp$projects_completed, levels=c('Low', 'Medium','High')))
Dataset_emp$net_att<-as.numeric(factor(Dataset_emp$net_att, levels=c('Low', 'Medium','High')))
Dataset_emp$coursescompleted<-as.numeric(factor(Dataset_emp$coursescompleted, levels=c('Low', 'Medium','High')))
preprocessParams2 <- preProcess(Dataset_emp[,1:6], method=c("range"))
traindata<-(predict(preprocessParams2, Dataset_emp[,1:6]))
traindata<-na.omit(traindata)
print(traindata)
fit <-  lm(Onsite ~ experience+net_att+projects_completed + net_score+coursescompleted, data=traindata,minsplit=2,maxdepth= 5)
fit <-  lm(Onsite ~ experience+net_att+projects_completed + net_score+coursescompleted, data=traindata)
print(fit)
predictions <-predict(fit, newdata=data[,3:7],type="class")
predictions <-predict(fit, newdata=data[,3:7])
print(predictions)
fit <-  lm(traindata$Onsite ~ traindata$experience+traindata$net_att+traindata$projects_completed + traindata$net_score+traindata$coursescompleted, data=traindata)
Dataset_emp$Onsite<-as.numeric(factor(Dataset_emp$Onsite, levels=c('No', 'Yes')))
preprocessParams2 <- preProcess(Dataset_emp[,1:6], method=c("range"))
traindata<-(predict(preprocessParams2, Dataset_emp[,1:6]))
traindata<-na.omit(traindata)
print(traindata)
fit <-  rpart(Onsite ~ experience+net_att+projects_completed + net_score+coursescompleted, data=traindata,minsplit=2,maxdepth= 5)
print(fit)
library("lm.beta")
library("rpart.plot")
library("randomForest")
library("C50")
library("RWeka")
library("gridExtra")
library("tableplot")
library("data.table")
library(caret)
library("RMySQL")
library("klaR")
library("caret")
library("DMwR")
library("readxl")
con <- dbConnect(MySQL(),
user="root", password="",
dbname="project", host="localhost")
rs <- dbSendQuery(con, "select trainee_id,name,experience,coursescompleted,projects_completed,net_score,net_att from trainee limit 40;")
data <- fetch(rs)
print(data)
preprocessParams <- preProcess(data[,1:7], method=c("range"))
testdataa<-(predict(preprocessParams, data[,1:7]))
print(testdataa)
library(readxl)
Dataset_emp<-na.omit(Dataset_emp)
Dataset_emp <- read_excel("C:/Users/Aishwarya/Documents/Dataset 800.xlsx")
Dataset_emp$experience<-as.numeric(factor(Dataset_emp$experience, levels=c('Young', 'Intermediate','Senior')))
Dataset_emp$net_score<-as.numeric(factor(Dataset_emp$net_score, levels=c('Good', 'Very good','Excellent')))
Dataset_emp$projects_completed<-as.numeric(factor(Dataset_emp$projects_completed, levels=c('Low', 'Medium','High')))
Dataset_emp$net_att<-as.numeric(factor(Dataset_emp$net_att, levels=c('Low', 'Medium','High')))
Dataset_emp$coursescompleted<-as.numeric(factor(Dataset_emp$coursescompleted, levels=c('Low', 'Medium','High')))
Dataset_emp$Onsite<-as.numeric(factor(Dataset_emp$Onsite, levels=c('No', 'Yes')))
preprocessParams2 <- preProcess(Dataset_emp[,1:6], method=c("range"))
traindata<-(predict(preprocessParams2, Dataset_emp[,1:6]))
traindata<-na.omit(traindata)
print(traindata)
fit <-  lm(traindata$Onsite ~ traindata$experience+traindata$net_att+traindata$projects_completed + traindata$net_score+traindata$coursescompleted, data=traindata)
print(fit)
rpart.plot(fit)
predictions <-predict(fit, newdata=data[,3:7])
print(predictions)
print(traindata)
fit <-  lm(Onsite ~ experience+net_att+projects_completed + net_score+coursescompleted, data=traindata)
print(fit)
predictions <-predict(fit, newdata=data[,3:7])
print(predictions)
pred<- c(predictions)
tid<- c(data$trainee_id)
tname<-c(data$name)
df <- data.frame(pred,tid,tname)
grid.table(df)
fit <-  lm(Onsite ~ experience+net_att+projects_completed + net_score+coursescompleted, data=traindata)
print(fit)
predictions <-predict(fit, newdata=data[,3:7])
print(predictions)
pred<- c(predictions)
tid<- c(data$trainee_id)
print(predictions)
fit <-  lm(Onsite ~ experience+net_att+projects_completed + net_score+coursescompleted, data=traindata)
print(fit)
predictions <-predict(fit,data[,3:7])
print(predictions)
pred<- c(predictions)
tid<- c(data$trainee_id)
tname<-c(data$name)
df <- data.frame(pred,tid,tname)
Dataset_emp<-na.omit(Dataset_emp)
Dataset_emp <- read_excel("C:/Users/Aishwarya/Documents/Dataset 800.xlsx")
Dataset_emp$experience<-as.numeric(factor(Dataset_emp$experience, levels=c('Young', 'Intermediate','Senior')))
Dataset_emp$net_score<-as.numeric(factor(Dataset_emp$net_score, levels=c('Good', 'Very good','Excellent')))
Dataset_emp$projects_completed<-as.numeric(factor(Dataset_emp$projects_completed, levels=c('Low', 'Medium','High')))
Dataset_emp$net_att<-as.numeric(factor(Dataset_emp$net_att, levels=c('Low', 'Medium','High')))
Dataset_emp$coursescompleted<-as.numeric(factor(Dataset_emp$coursescompleted, levels=c('Low', 'Medium','High')))
Dataset_emp$Onsite<-as.numeric(factor(Dataset_emp$Onsite, levels=c('No', 'Yes')))
preprocessParams2 <- preProcess(Dataset_emp[,1:6], method=c("range"))
traindata<-(predict(preprocessParams2, Dataset_emp[,1:6]))
traindata<-na.omit(traindata)
print(traindata)
fit <-  lm(Onsite ~ experience+net_att+projects_completed + net_score+coursescompleted, data=traindata)
print(fit)
predictions <-predict(fit,testdataa[,3:7])
print(predictions)
pred<- c(predictions)
tid<- c(data$trainee_id)
tname<-c(data$name)
df <- data.frame(pred,tid,tname)
grid.table(df)
library("lm.beta")
library("rpart.plot")
library("randomForest")
library("C50")
library("RWeka")
library("gridExtra")
library("tableplot")
library("data.table")
library(caret)
library("RMySQL")
library("klaR")
library("caret")
library("DMwR")
library("readxl")
con <- dbConnect(MySQL(),
user="root", password="",
dbname="project", host="localhost")
rs <- dbSendQuery(con, "select trainee_id,name,experience,coursescompleted,projects_completed,net_score,net_att from trainee limit 40;")
data <- fetch(rs)
print(data)
preprocessParams <- preProcess(data[,1:7], method=c("range"))
testdataa<-(predict(preprocessParams, data[,1:7]))
print(testdataa)
library(readxl)
Dataset_emp<-na.omit(Dataset_emp)
Dataset_emp <- read_excel("C:/Users/Aishwarya/Documents/Dataset 800.xlsx")
Dataset_emp$experience<-as.numeric(factor(Dataset_emp$experience, levels=c('Young', 'Intermediate','Senior')))
Dataset_emp$net_score<-as.numeric(factor(Dataset_emp$net_score, levels=c('Good', 'Very good','Excellent')))
Dataset_emp$projects_completed<-as.numeric(factor(Dataset_emp$projects_completed, levels=c('Low', 'Medium','High')))
Dataset_emp$net_att<-as.numeric(factor(Dataset_emp$net_att, levels=c('Low', 'Medium','High')))
Dataset_emp$coursescompleted<-as.numeric(factor(Dataset_emp$coursescompleted, levels=c('Low', 'Medium','High')))
Dataset_emp$Onsite<-as.numeric(factor(Dataset_emp$Onsite, levels=c('No', 'Yes')))
preprocessParams2 <- preProcess(Dataset_emp[,1:6], method=c("range"))
traindata<-(predict(preprocessParams2, Dataset_emp[,1:6]))
traindata<-na.omit(traindata)
print(traindata)
fit <-  lm(Onsite ~ experience+net_att+projects_completed + net_score+coursescompleted, data=traindata)
print(fit)
predictions <-predict(fit,testdataa[,3:7])
print(predictions)
install.packages("glm")
install.packages("glm.beta")
library("rpart")
library("rpart.plot")
library("randomForest")
library("C50")
library("RWeka")
library("gridExtra")
library("tableplot")
library("data.table")
library(caret)
library("RMySQL")
library("klaR")
library("caret")
library("DMwR")
library("readxl")
con <- dbConnect(MySQL(),
user="root", password="",
dbname="project", host="localhost")
rs <- dbSendQuery(con, "select trainee_id,name,experience,coursescompleted,projects_completed,net_score,net_att from trainee limit 40;")
data <- fetch(rs)
print(data)
preprocessParams <- preProcess(data[,1:7], method=c("range"))
testdataa<-(predict(preprocessParams, data[,1:7]))
print(testdataa)
library(readxl)
Dataset_emp<-na.omit(Dataset_emp)
Dataset_emp <- read_excel("C:/Users/Aishwarya/Documents/Dataset 800.xlsx")
Dataset_emp$experience<-as.numeric(factor(Dataset_emp$experience, levels=c('Young', 'Intermediate','Senior')))
Dataset_emp$net_score<-as.numeric(factor(Dataset_emp$net_score, levels=c('Good', 'Very good','Excellent')))
Dataset_emp$projects_completed<-as.numeric(factor(Dataset_emp$projects_completed, levels=c('Low', 'Medium','High')))
Dataset_emp$net_att<-as.numeric(factor(Dataset_emp$net_att, levels=c('Low', 'Medium','High')))
Dataset_emp$coursescompleted<-as.numeric(factor(Dataset_emp$coursescompleted, levels=c('Low', 'Medium','High')))
preprocessParams2 <- preProcess(Dataset_emp[,1:6], method=c("range"))
traindata<-(predict(preprocessParams2, Dataset_emp[,1:6]))
traindata<-na.omit(traindata)
print(traindata)
fit <-  rpart(Onsite ~ experience+net_att+projects_completed + net_score+coursescompleted, data=traindata,minsplit=2,maxdepth= 5)
print(fit)
rpart.plot(fit)
predictions <-predict(fit, newdata=data[,3:7],type="class")
print(predictions)
pred<- c(predictions)
tid<- c(data$trainee_id)
tname<-c(data$name)
df <- data.frame(pred,tid,tname)
grid.table(df)
install.packages("glm2")
fit <-  glm2(Onsite ~ experience+net_att+projects_completed + net_score+coursescompleted, data=traindata)
fit <-  glm(Onsite ~ experience+net_att+projects_completed + net_score+coursescompleted, data=traindata)
print(fit)
fit <-  glm(Onsite ~ experience+net_att+projects_completed + net_score+coursescompleted, data=traindata)
library("glm2")
library("rpart.plot")
library("randomForest")
library("C50")
library("RWeka")
library("gridExtra")
library("tableplot")
library("data.table")
library(caret)
library("RMySQL")
library("klaR")
library("caret")
library("DMwR")
library("readxl")
con <- dbConnect(MySQL(),
user="root", password="",
dbname="project", host="localhost")
rs <- dbSendQuery(con, "select trainee_id,name,experience,coursescompleted,projects_completed,net_score,net_att from trainee limit 40;")
data <- fetch(rs)
print(data)
preprocessParams <- preProcess(data[,1:7], method=c("range"))
testdataa<-(predict(preprocessParams, data[,1:7]))
print(testdataa)
library(readxl)
Dataset_emp<-na.omit(Dataset_emp)
Dataset_emp <- read_excel("C:/Users/Aishwarya/Documents/Dataset 800.xlsx")
Dataset_emp$experience<-as.numeric(factor(Dataset_emp$experience, levels=c('Young', 'Intermediate','Senior')))
Dataset_emp$net_score<-as.numeric(factor(Dataset_emp$net_score, levels=c('Good', 'Very good','Excellent')))
Dataset_emp$projects_completed<-as.numeric(factor(Dataset_emp$projects_completed, levels=c('Low', 'Medium','High')))
Dataset_emp$net_att<-as.numeric(factor(Dataset_emp$net_att, levels=c('Low', 'Medium','High')))
Dataset_emp$coursescompleted<-as.numeric(factor(Dataset_emp$coursescompleted, levels=c('Low', 'Medium','High')))
Dataset_emp$Onsite<-as.numeric(factor(Dataset_emp$Onsite, levels=c('No', 'Yes')))
preprocessParams2 <- preProcess(Dataset_emp[,1:6], method=c("range"))
traindata<-(predict(preprocessParams2, Dataset_emp[,1:6]))
traindata<-na.omit(traindata)
print(traindata)
fit <-  glm(Onsite ~ experience+net_att+projects_completed + net_score+coursescompleted, data=traindata)
print(fit)
predictions <-predict(fit,testdataa[,3:7])
print(predictions)
fit <-  glm(Onsite ~ experience+net_att+projects_completed + net_score+coursescompleted, data=traindata, family = binomial)
print(fit)
predictions <-predict(fit,testdataa[,3:7])
print(predictions)
print(traindata)
fit <-  glm(Onsite ~ experience+net_att+projects_completed + net_score+coursescompleted, data=traindata, family =  binomial(link = "logit"))
print(fit)
predictions <-predict(fit,testdataa[,3:7])
print(predictions)
library("data.table")
library(caret)
library("RMySQL")
library(neuralnet)
con <- dbConnect(MySQL(),
user="root", password="",
dbname="project", host="localhost")
data <- fetch(rs)
print(data)
testdata<-(predict(preprocessParams, data[,1:7]))
print(testdata)
library(readxl)
Dataset_emp$experience<-as.numeric(factor(Dataset_emp$experience, levels=c('Young', 'Intermediate','Senior')))
Dataset_emp$projects_completed<-as.numeric(factor(Dataset_emp$projects_completed, levels=c('Low', 'Medium','High')))
Dataset_emp$net_att<-as.numeric(factor(Dataset_emp$net_att, levels=c('Low', 'Medium','High')))
Dataset_emp$coursescompleted<-as.numeric(factor(Dataset_emp$coursescompleted, levels=c('Low', 'Medium','High')))
Dataset_emp$Onsite<-as.numeric(factor(factor(Dataset_emp$Onsite,levels=c('No', 'Yes'))))
Dataset_emp$net_score<-as.numeric(factor(Dataset_emp$net_score, levels=c('Good', 'Very good','Excellent')))
preprocessParams2 <- preProcess(Dataset_emp[,1:6], method=c("range"))
preprocessParams <- preProcess(data[,1:7], method=c("range"))
Dataset_emp <- read_excel("C:/Users/Aishwarya/Documents/Dataset 800.xlsx")
rs <- dbSendQuery(con, "select trainee_id,name,experience,coursescompleted,projects_completed,net_score,net_att from trainee;")
traindata<-(predict(preprocessParams2, Dataset_emp[,1:6]))
print(traindata)
onsite <- neuralnet(traindata$Onsite ~ traindata$experience + traindata$net_score+traindata$coursescompleted+traindata$projects_completed+traindata$net_att,traindata, hidden = 0, lifesign = "minimal",threshold=0.01,linear.output =FALSE, algorithm =  "backprop",learningrate = 0.01)
plot(onsite, rep = "best")
onsite.results <- compute(onsite, testdata[,3:7])
results <- data.frame(prediction = onsite.results$net.result)
print(results)
optimum_results<-preProcess(results, method=c("range"))
final_result<-predict(optimum_results,results)
print(final_result$prediction)
barplot(final_result$prediction,width = 1,names.arg=testdata$trainee_id,xlab="Trainee Id's",ylab="Probability of going onsite",col="blue",
main="Prediction of going onsite",border="red")
o<-head(order(final_result$prediction,decreasing=TRUE),5)
print(final_result$prediction[o])
barplot(final_result$prediction[o],width = 1,names.arg=testdata$trainee_id[o]&testdata$name[o],names.arg=testdata$name[o],xlab="Trainee Id's",ylab="Probability of going onsite",col="blue",
main="Prediction of going onsite",border="red")
o_per<-o*100
print(o_per)
library("data.table")
library(caret)
library("RMySQL")
library(neuralnet)
con <- dbConnect(MySQL(),
user="root", password="",
dbname="project", host="localhost")
rs <- dbSendQuery(con, "select trainee_id,name,experience,coursescompleted,projects_completed,net_score,net_att from trainee;")
data <- fetch(rs)
print(data)
preprocessParams <- preProcess(data[,1:7], method=c("range"))
testdata<-(predict(preprocessParams, data[,1:7]))
print(testdata)
library(readxl)
Dataset_emp <- read_excel("C:/Users/Aishwarya/Documents/Dataset 800.xlsx")
Dataset_emp$experience<-as.numeric(factor(Dataset_emp$experience, levels=c('Young', 'Intermediate','Senior')))
Dataset_emp$net_score<-as.numeric(factor(Dataset_emp$net_score, levels=c('Good', 'Very good','Excellent')))
Dataset_emp$projects_completed<-as.numeric(factor(Dataset_emp$projects_completed, levels=c('Low', 'Medium','High')))
Dataset_emp$net_att<-as.numeric(factor(Dataset_emp$net_att, levels=c('Low', 'Medium','High')))
Dataset_emp$coursescompleted<-as.numeric(factor(Dataset_emp$coursescompleted, levels=c('Low', 'Medium','High')))
Dataset_emp$Onsite<-as.numeric(factor(factor(Dataset_emp$Onsite,levels=c('No', 'Yes'))))
preprocessParams2 <- preProcess(Dataset_emp[,1:6], method=c("range"))
traindata<-(predict(preprocessParams2, Dataset_emp[,1:6]))
print(traindata)
onsite <- neuralnet(traindata$Onsite ~ traindata$experience + traindata$net_score+traindata$coursescompleted+traindata$projects_completed+traindata$net_att,traindata, hidden = 5, lifesign = "minimal",threshold=0.01,linear.output =FALSE, algorithm =  "backprop",learningrate = 0.01)
plot(onsite, rep = "best")
onsite.results <- compute(onsite, testdata[,3:7])
plot(onsite, rep = "best")
print(traindata)
onsite <- neuralnet(traindata$Onsite ~ traindata$experience + traindata$net_score+traindata$coursescompleted+traindata$projects_completed+traindata$net_att,traindata, hidden = 5, lifesign = "minimal",threshold=0.01,linear.output =FALSE, algorithm =  "backprop",learningrate = 0.01)
plot(onsite, rep = "best")
library("data.table")
library(caret)
library("RMySQL")
library(neuralnet)
con <- dbConnect(MySQL(),
user="root", password="",
dbname="project", host="localhost")
rs <- dbSendQuery(con, "select trainee_id,name,experience,coursescompleted,projects_completed,net_score,net_att from trainee;")
data <- fetch(rs)
print(data)
preprocessParams <- preProcess(data[,1:7], method=c("range"))
testdata<-(predict(preprocessParams, data[,1:7]))
print(testdata)
library(readxl)
Dataset_emp <- read_excel("C:/Users/Aishwarya/Documents/Dataset 800.xlsx")
Dataset_emp$experience<-as.numeric(factor(Dataset_emp$experience, levels=c('Young', 'Intermediate','Senior')))
Dataset_emp$net_score<-as.numeric(factor(Dataset_emp$net_score, levels=c('Good', 'Very good','Excellent')))
Dataset_emp$projects_completed<-as.numeric(factor(Dataset_emp$projects_completed, levels=c('Low', 'Medium','High')))
Dataset_emp$net_att<-as.numeric(factor(Dataset_emp$net_att, levels=c('Low', 'Medium','High')))
Dataset_emp$coursescompleted<-as.numeric(factor(Dataset_emp$coursescompleted, levels=c('Low', 'Medium','High')))
Dataset_emp$Onsite<-as.numeric(factor(factor(Dataset_emp$Onsite,levels=c('No', 'Yes'))))
preprocessParams2 <- preProcess(Dataset_emp[,1:6], method=c("range"))
traindata<-(predict(preprocessParams2, Dataset_emp[,1:6]))
print(traindata)
onsite <- neuralnet(traindata$Onsite ~ traindata$experience + traindata$net_score+traindata$coursescompleted+traindata$projects_completed+traindata$net_att,traindata, hidden = 5, lifesign = "minimal",threshold=0.01,linear.output =FALSE, algorithm =  "backprop",learningrate = 0.01)
plot(onsite, rep = "best")
onsite.results <- compute(onsite, testdata[,3:7])
results <- data.frame(prediction = onsite.results$net.result)
print(results)
optimum_results<-preProcess(results, method=c("range"))
final_result<-predict(optimum_results,results)
print(final_result$prediction)
barplot(final_result$prediction,width = 1,names.arg=testdata$trainee_id,xlab="Trainee Id's",ylab="Probability of going onsite",col="blue",
main="Prediction of going onsite",border="red")
o<-head(order(final_result$prediction,decreasing=TRUE),5)
print(final_result$prediction[o])
barplot(final_result$prediction[o],width = 1,names.arg=testdata$trainee_id[o]&testdata$name[o],names.arg=testdata$name[o],xlab="Trainee Id's",ylab="Probability of going onsite",col="blue",
main="Prediction of going onsite",border="red")
o_per<-o*100
print(o_per)
o<-head(order(final_result$prediction,decreasing=TRUE),5)
print(final_result$prediction[o])
barplot(final_result$prediction[o],width = 1,names.arg=testdata$trainee_id[o]&testdata$name[o],names.arg=testdata$name[o],xlab="Trainee Id's",ylab="Probability of going onsite",col="blue",
main="Prediction of going onsite",border="red")
barplot(final_result$prediction[o],width = 1,names.arg=testdata$trainee_id[o],names.arg=testdata$name[o],xlab="Trainee Id's",ylab="Probability of going onsite",col="blue",
main="Prediction of going onsite",border="red")
o<-head(order(final_result$prediction,decreasing=TRUE),5)
print(final_result$prediction[o])
barplot(final_result$prediction[o],width = 1,names.arg=testdata$trainee_id[o],names.arg=testdata$name[o],xlab="Trainee Id's",ylab="Probability of going onsite",col="blue",
main="Prediction of going onsite",border="red")
barplot(final_result$prediction[o],width = 1,names.arg=testdata$trainee_id[o],xlab="Trainee Id's",ylab="Probability of going onsite",col="blue",main="Prediction of going onsite",border="red")
o_per<-o*100
print(o_per)
o_per<-final_result$prediction*100
print(o_per)
o_per<-final_result$prediction[o]*100
print(o_per)
print(o_per)
pred<- c(o_per)
tid<- c(testdata$trainee_id)
tname<-c(testdata$name)
df <- data.frame(pred,tid,tname)
print(o_per)
pred<- c(o_per)
tid<- c(testdata$trainee_id[o])
tname<-c(testdata$name[o])
df <- data.frame(pred,tid,tname)
grid.table(df)
library("DMwR")
grid.table(df)
library("gridExtra")
library("tableplot")
library("data.table")
library("data.table")
library(caret)
library("RMySQL")
library("DMwR")
library(neuralnet)
con <- dbConnect(MySQL(),
user="root", password="",
dbname="project", host="localhost")
rs <- dbSendQuery(con, "select trainee_id,name,experience,coursescompleted,projects_completed,net_score,net_att from trainee;")
data <- fetch(rs)
print(data)
preprocessParams <- preProcess(data[,1:7], method=c("range"))
testdata<-(predict(preprocessParams, data[,1:7]))
print(testdata)
library(readxl)
Dataset_emp <- read_excel("C:/Users/Aishwarya/Documents/Dataset 800.xlsx")
Dataset_emp$experience<-as.numeric(factor(Dataset_emp$experience, levels=c('Young', 'Intermediate','Senior')))
Dataset_emp$net_score<-as.numeric(factor(Dataset_emp$net_score, levels=c('Good', 'Very good','Excellent')))
Dataset_emp$projects_completed<-as.numeric(factor(Dataset_emp$projects_completed, levels=c('Low', 'Medium','High')))
Dataset_emp$net_att<-as.numeric(factor(Dataset_emp$net_att, levels=c('Low', 'Medium','High')))
Dataset_emp$coursescompleted<-as.numeric(factor(Dataset_emp$coursescompleted, levels=c('Low', 'Medium','High')))
Dataset_emp$Onsite<-as.numeric(factor(factor(Dataset_emp$Onsite,levels=c('No', 'Yes'))))
preprocessParams2 <- preProcess(Dataset_emp[,1:6], method=c("range"))
traindata<-(predict(preprocessParams2, Dataset_emp[,1:6]))
print(traindata)
onsite <- neuralnet(traindata$Onsite ~ traindata$experience + traindata$net_score+traindata$coursescompleted+traindata$projects_completed+traindata$net_att,traindata, hidden = 5, lifesign = "minimal",threshold=0.01,linear.output =FALSE, algorithm =  "backprop",learningrate = 0.01)
plot(onsite, rep = "best")
onsite.results <- compute(onsite, testdata[,3:7])
results <- data.frame(prediction = onsite.results$net.result)
print(results)
optimum_results<-preProcess(results, method=c("range"))
final_result<-predict(optimum_results,results)
print(final_result$prediction)
barplot(final_result$prediction,width = 1,names.arg=testdata$trainee_id,xlab="Trainee Id's",ylab="Probability of going onsite",col="blue",
main="Prediction of going onsite",border="red")
o<-head(order(final_result$prediction,decreasing=TRUE),5)
print(final_result$prediction[o])
barplot(final_result$prediction[o],width = 1,names.arg=testdata$trainee_id[o],xlab="Trainee Id's",ylab="Probability of going onsite",col="blue",main="Prediction of going onsite",border="red")
o_per<-final_result$prediction[o]*100
print(o_per)
pred<- c(o_per)
tid<- c(testdata$trainee_id[o])
tname<-c(testdata$name[o])
df <- data.frame(pred,tid,tname)
grid.table(df)
barplot(final_result$prediction[o],width = 1,names.arg=testdata$trainee_id[o],xlab="Trainee Id's",ylab="Probability of going onsite",col="blue",main="Prediction of going onsite",border="red")
o_per<-final_result$prediction[o]*100
print(o_per)
pred<- c(o_per)
tid<- c(testdata$trainee_id[o])
tname<-c(testdata$name[o])
df <- data.frame(pred,tid,tname)
grid.table(df)
print(o_per)
o_per<-final_result$prediction[o]*100
print(o_per)
pred<- c(o_per)
tid<- c(testdata$trainee_id[o])
tname<-c(testdata$name[o])
df <- data.frame(pred,tid,tname)
grid.table(df)
df <- data.frame(pred,tid,tname)
grid.table(df)
setwd("C:/wamp64/www/st")
library("gridExtra")
library("tableplot")
library("data.table")
library("data.table")
library("RMySQL")
library("DMwR")
library("neuralnet")
library("caret")
library("readxl")
con <- dbConnect(MySQL(),
user="root", password="",
dbname="project", host="localhost")
rs <- dbSendQuery(con, "select trainee_id,name,experience,coursescompleted,projects_completed,net_score,net_att from trainee;")
data <- fetch(rs)
print(data)
preprocessParams <- preProcess(data[,1:7], method=c("range"))
testdata<-(predict(preprocessParams, data[,1:7]))
print(testdata)
library(readxl)
Dataset_emp <- read_excel("C:/Users/Aishwarya/Documents/Dataset 800.xlsx")
Dataset_emp$experience<-as.numeric(factor(Dataset_emp$experience, levels=c('Young', 'Intermediate','Senior')))
Dataset_emp$net_score<-as.numeric(factor(Dataset_emp$net_score, levels=c('Good', 'Very good','Excellent')))
Dataset_emp$projects_completed<-as.numeric(factor(Dataset_emp$projects_completed, levels=c('Low', 'Medium','High')))
Dataset_emp$net_att<-as.numeric(factor(Dataset_emp$net_att, levels=c('Low', 'Medium','High')))
Dataset_emp$coursescompleted<-as.numeric(factor(Dataset_emp$coursescompleted, levels=c('Low', 'Medium','High')))
Dataset_emp$Onsite<-as.numeric(factor(factor(Dataset_emp$Onsite,levels=c('No', 'Yes'))))
preprocessParams2 <- preProcess(Dataset_emp[,1:6], method=c("range"))
traindata<-(predict(preprocessParams2, Dataset_emp[,1:6]))
print(traindata)
onsite <- neuralnet(traindata$Onsite ~ traindata$experience + traindata$net_score+traindata$coursescompleted+traindata$projects_completed+traindata$net_att,traindata, hidden = 5, lifesign = "minimal",threshold=0.01,linear.output =FALSE,learningrate = 0.01)
plot(onsite)
onsite.results <- compute(onsite, testdata[,3:7])
results <- data.frame(prediction = onsite.results$net.result)
print(testdata)
print(results)
print(onsite$startweights)
optimum_results<-preProcess(results, method=c("range"))
final_result<-predict(optimum_results,results)
print(final_result$prediction)
barplot(final_result$prediction,width = 1,names.arg=testdata$trainee_id,xlab="Trainee Id's",ylab="Probability of going onsite",col="blue",
main="Prediction of going onsite",border="red")
o<-head(order(final_result$prediction,decreasing=TRUE),10)
print(final_result$prediction[o])
barplot(final_result$prediction[o],width = 1,names.arg=testdata$trainee_id[o],xlab="Trainee Id's",ylab="Probability of going onsite",col="blue",main="Prediction of going onsite",border="red")
o_per<-final_result$prediction[o]*100
print(o_per)
Onsite_Eligibility<- c(o_per)
Trainee_id<- c(testdata$trainee_id[o])
Trainee_name<-c(testdata$name[o])
df <- data.frame(Onsite_Eligibility,Trainee_id,Trainee_name)
ggsave("onsite_nn.png", grid.table(df))
